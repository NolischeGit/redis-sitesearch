<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Monitoring with Metrics and Alerts on Redis Labs Documentation Center</title>
    <link>/rs/administering/monitoring-metrics/</link>
    <description>Recent content in Monitoring with Metrics and Alerts on Redis Labs Documentation Center</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/rs/administering/monitoring-metrics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Metrics in the Admin Console</title>
      <link>/rs/administering/monitoring-metrics/console-metrics-definitions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/monitoring-metrics/console-metrics-definitions/</guid>
      <description>The Redis Enterprise Software (RS) admin console shows metrics with information about the performance of the cluster, node, database, and shard. For Redis on Flash (ROF) databases, additional metrics are available.
Standard metrics    Metric Components measured Description More information     Connections Cluster, Node, Database Number of connections used to access the database    CPU usage Cluster, Node Percent usage of the CPU    Evicted objects/sec Database, Shard Number of objects evicted per second The eviction process is taken place if:</description>
    </item>
    
    <item>
      <title>Redis Enterprise Software Integration with Prometheus</title>
      <link>/rs/administering/monitoring-metrics/prometheus-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/monitoring-metrics/prometheus-integration/</guid>
      <description>To collect and display metrics data from your databases and other cluster components, you can connect your Prometheus or Grafana server to your Redis Enterprise cluster. Metrics are exposed at the node, database, shard and proxy levels.
 Prometheus (https://prometheus.io/) is an open-source systems monitoring and alerting toolkit that can scrape metrics from different sources. Grafana (https://grafana.com/) is an open-source, feature-rich metrics dashboard and graph editor that can process Prometheus data.</description>
    </item>
    
    <item>
      <title>Metrics in Prometheus</title>
      <link>/rs/administering/monitoring-metrics/prometheus-metrics-definitions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/monitoring-metrics/prometheus-metrics-definitions/</guid>
      <description>The integration with Prometheus lets you create dashboards that highlight the metrics that are important to you.
Here are the metrics available to Prometheus:
Database metrics    Metric Description     bdb_avg_latency Average latency of operations on the DB (seconds); returned only when there is traffic   bdb_avg_latency_max Highest value of average latency of operations on the DB (seconds); returned only when there is traffic   bdb_avg_read_latency Average latency of read operations (seconds); returned only when there is traffic   bdb_avg_read_latency_max Highest value of average latency of read operations (seconds); returned only when there is traffic   bdb_avg_write_latency Average latency of write operations (seconds); returned only when there is traffic   bdb_avg_write_latency_max Highest value of average latency of write operations (seconds); returned only when there is traffic   bdb_conns Number of client connections to DB   bdb_egress_bytes Rate of outgoing network traffic to DB (bytes/sec)   bdb_egress_bytes_max Highest value of rate of outgoing network traffic to DB (bytes/sec)   bdb_evicted_objects Rate of key evictions from DB (evictions/sec)   bdb_evicted_objects_max Highest value of rate of key evictions from DB (evictions/sec)   bdb_expired_objects Rate keys expired in DB (expirations/sec)   bdb_expired_objects_max Highest value of rate keys expired in DB (expirations/sec)   bdb_fork_cpu_system % cores utilization in system mode for all redis shard fork child processes of this database   bdb_fork_cpu_system_max Highest value of % cores utilization in system mode for all redis shard fork child processes of this database   bdb_fork_cpu_user % cores utilization in user mode for all redis shard fork child processes of this database   bdb_fork_cpu_user_max Highest value of % cores utilization in user mode for all redis shard fork child processes of this database   bdb_ingress_bytes Rate of incoming network traffic to DB (bytes/sec)   bdb_ingress_bytes_max Highest value of rate of incoming network traffic to DB (bytes/sec)   bdb_instantaneous_ops_per_sec Request rate handled by all shards of DB (ops/sec)   bdb_main_thread_cpu_system % cores utilization in system mode for all redis shard main threas of this database   bdb_main_thread_cpu_system_max Highest value of % cores utilization in system mode for all redis shard main threas of this database   bdb_main_thread_cpu_user % cores utilization in user mode for all redis shard main threads of this database   bdb_main_thread_cpu_user_max Highest value of % cores utilization in user mode for all redis shard main threads of this database   bdb_mem_frag_ratio RAM fragmentation ratio (RSS / allocated RAM)   bdb_mem_size_lua Redis lua scripting heap size (bytes)   bdb_memory_limit Configured RAM limit for the database   bdb_monitor_sessions_count Number of client connected in monitor mode to the DB   bdb_no_of_keys Number of keys in DB   bdb_other_req Rate of other (non read/write) requests on DB (ops/sec)   bdb_other_req_max Highest value of rate of other (non read/write) requests on DB (ops/sec)   bdb_other_res Rate of other (non read/write) responses on DB (ops/sec)   bdb_other_res_max Highest value of rate of other (non read/write) responses on DB (ops/sec)   bdb_pubsub_channels Count the pub/sub channels with subscribed clients.</description>
    </item>
    
    <item>
      <title>Redis Enterprise Software Integration with Nagios</title>
      <link>/rs/administering/monitoring-metrics/nagios-plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/monitoring-metrics/nagios-plugin/</guid>
      <description>The Redis Enterprise Software (RS) Nagios plugin enables you to monitor the status of RS related objects and alerts. The RS alerts can be related to the cluster, nodes, or databases.
The alerts that can be monitored via Nagios are the same alerts that can be configured in the RS UI in the Settings ­&amp;gt; Alerts page, or the specific Database ­&amp;gt; Configuration page.
All alert configurations (active / not active, setting thresholds, etc&amp;rsquo;) can only be done through the RS UI, they cannot be configured in Nagios.</description>
    </item>
    
  </channel>
</rss>