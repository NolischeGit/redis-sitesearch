<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database Operations on Redis Labs Documentation Center</title>
    <link>/rs/administering/database-operations/</link>
    <description>Recent content in Database Operations on Redis Labs Documentation Center</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/rs/administering/database-operations/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Causal Consistency in a Conflict-free Replicated Database (CRDB)</title>
      <link>/rs/administering/database-operations/causal-consistency-crdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/causal-consistency-crdb/</guid>
      <description>When you enable Causal Consistency in Active-Active databases, the order of operations on a specific key are maintained across all Active-Active database instances.
For instance, if operations A and B were applied on the same key and the effect of A was observed by the instance that initiated B before B was applied to the key, then all instances of an Active-Active databases would observe the effect of A before observing the effect of B.</description>
    </item>
    
    <item>
      <title>Create an Active-Active Geo-Replicated Database</title>
      <link>/rs/administering/database-operations/create-active-active/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/create-active-active/</guid>
      <description>Active-Active geo-replicated databases (formerly known as CRDBs) give applications write access to replicas of the dataset in different geographical locations.
The participating Redis Enterprise Software (RS) clusters that host the instances can be in distributed geographic locations. Every instance of an Active-Active database can receive write operations, and all operations are synchronized to all of the instances without conflict.
Steps to create an Active-Active database  Create a service account - On each participating cluster, create a dedicated user account with the Admin role.</description>
    </item>
    
    <item>
      <title>Create an Active-Passive Geo-Replicated Database (Replica Of)</title>
      <link>/rs/administering/database-operations/create-active-passive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/create-active-passive/</guid>
      <description>Active-Passive replicated databases (also known as Replica Of) give applications read-only access to replicas of the data that are hosted in different geographical locations.
The source database can be located in the same Redis Enterprise Software (RS) cluster, in a different cluster, or in an OSS Redis database. Your applications can connect to the source database to read and write data, or to the source or destination databases to read data.</description>
    </item>
    
    <item>
      <title>Creating a Redis Enterprise Software Database</title>
      <link>/rs/administering/database-operations/creating-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/creating-database/</guid>
      <description>You can create Redis databases that are are clustered and distributed across a single Redis Enterprise Software (RS) cluster. These databases can use Redis Enterprise features like:
 Redis on Flash High availability Data persistence Redis modules  You can create databases according to the number of shards in your subscription and the memory available on the machine.
 Note -  For databases with Active-Active replication for geo-distributed locations, create an Active-Active database.</description>
    </item>
    
    <item>
      <title>Database memory limits in Redis Enterprise Software</title>
      <link>/rs/administering/database-operations/memory-limit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/memory-limit/</guid>
      <description>When you set a database&amp;rsquo;s memory limit, you define the maximum size the database can reach in the cluster, across all database replicas and shards, including:
 Slave shards (if database replication is enabled) Database shards (if database clustering is enabled)  If the total size of the database in the cluster reaches the memory limit, the data eviction policy that was defined for the database is applied.
The following examples show how different database configurations affect the total database size.</description>
    </item>
    
    <item>
      <title>Delete a Database</title>
      <link>/rs/administering/database-operations/deleting-database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/deleting-database/</guid>
      <description>To delete a database in Redis Enterprise Software:
 Click the relevant database row in the Databases page. The selected database page appears. Select the Configuration tab. Click Delete at the bottom of the page. Confirm the deletion.  </description>
    </item>
    
    <item>
      <title>Deleting an Active-Active Database</title>
      <link>/rs/administering/database-operations/delete-crdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/delete-crdb/</guid>
      <description>When you delete an Active-Active database (formerly known as CRDB), all instance of the Active-Active database are deleted from all participating clusters.
 Warning -  This action is an immediate, non-reversible, and has no rollback.   Because Active-Active databases are made up of instances on multiple participating clusters, to restore a deleted Active-Active database you must create the database again with all of its instances and then restore the data to the database from backup.</description>
    </item>
    
    <item>
      <title>Eviction policies</title>
      <link>/rs/administering/database-operations/eviction-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/eviction-policy/</guid>
      <description>The eviction policy defines the methodology that Redis Enterprise Software uses when the database exceeds the memory limit. The eviction policies are:
   Policy Description      noeviction Returns an error if the memory limit has been reached when trying to insert more data    allkeys-lru Evicts the least recently used keys out of all keys    allkeys-lfu Evicts the least frequently used keys out of all keys    allkeys-random Randomly evicts keys out of all keys    volatile-lru Evicts the least recently used keys out of all keys with an &amp;ldquo;expire&amp;rdquo; field set    volatile-lfu Evicts the least frequently used keys out of all keys with an &amp;ldquo;expire&amp;rdquo; field set    volatile-random Randomly evicts keys with an &amp;ldquo;expire&amp;rdquo; field set    volatile-ttl Evicts the shortest time-to-live and least recently used keys out of all keys with an &amp;ldquo;expire&amp;rdquo; field set.</description>
    </item>
    
    <item>
      <title>Exporting Data</title>
      <link>/rs/administering/database-operations/exporting-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/exporting-data/</guid>
      <description>You can schedule backups of a specific Redis Enterprise Software (RS) database to make sure you always have valid backups. You can also export the data from a specific database at any time.
You can export a database to these locations:
 FTP server SFTP server Amazon AWS S3 Local mount point OpenStack Swift (Object Storage) Azure Blob Storage Google Cloud Storage  The backup process creates compressed (.gz) RDB files that you can import into a database.</description>
    </item>
    
    <item>
      <title>Flushing Database Data</title>
      <link>/rs/administering/database-operations/flush-db-crdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/flush-db-crdb/</guid>
      <description>To delete the data in a database without deleting the database configuration, you can flush the data from the database.
 Warning -  The flush command deletes ALL in-memory and persistence data in the database. We recommend that you backup your database before you flush the data.   Flushing data from a database From the command line, you can flush a database with the redis-cli command or with your favorite Redis client.</description>
    </item>
    
    <item>
      <title>High Availability for Slave Shards</title>
      <link>/rs/administering/database-operations/slave-ha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/slave-ha/</guid>
      <description>When you enable database replication for your database, Redis Enterprise Software replicates your data to a slave node to make sure that your data is highly available. If the slave node fails or if the master node fails and the slave is promoted to master, the remaining master node is a single point of failure.
You can configure high availability for slave shards (slave HA) so that the cluster automatically migrates the slave shards to an available node.</description>
    </item>
    
    <item>
      <title>Importing Data into Redis Enterprise</title>
      <link>/rs/administering/database-operations/importing-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/importing-data/</guid>
      <description>You can import export or backup files of a specific Redis Enterprise Software (RS) database to restore data. You can either import from a single file or from multiple files, such as when you want to import from a backup of a clustered database.
 Warning -  Importing data erases all existing content in the database.   Importing data into a database To import data into a database:</description>
    </item>
    
    <item>
      <title>Importing Data into your Active-Active database</title>
      <link>/rs/administering/database-operations/administering-database-operations-importing-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/administering-database-operations-importing-data/</guid>
      <description>When importing data into an Active-Active database, there are two options:
 Perform a flushall to the database, thus deleting all data. Then import the data into the Active-Active database. Import data but merge it into the existing or add new data from the import file.  Because Active-Active databases have a numeric counter data type, when you merge the imported data into the existing data RS increments counters by the value that is in the imported data.</description>
    </item>
    
    <item>
      <title>Scheduled Backups</title>
      <link>/rs/administering/database-operations/database-backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/database-backup/</guid>
      <description>You can manually export your data from a specific Redis Enterprise Software (RS) database at any time. You can also schedule backups of your databases to make sure you always have valid backups. The backup process can be scheduled for every 1, 4, 12 or 24 hours from the time that you save the backup configuration.
You can schedule backups to these locations:
 FTP server SFTP server Amazon S3 Local mount point OpenStack Swift (Object Storage) Azure Blob Storage Google Cloud Storage  The backup process creates compressed (.</description>
    </item>
    
    <item>
      <title>Updating database configuration</title>
      <link>/rs/administering/database-operations/updating-configurations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/administering/database-operations/updating-configurations/</guid>
      <description>You can change the configuration of a Redis Enterprise Software (RS) database at any time.
To edit the configuration of a database:
  Go to Database and select the database that you want to edit.
  Go to Configuration and click Edit at the bottom of the page. The database settings appear.
  Change the any of the configurable database settings.
 Note -  For Active-Active database instances, most database settings only apply to the instance that you are editing.</description>
    </item>
    
  </channel>
</rss>