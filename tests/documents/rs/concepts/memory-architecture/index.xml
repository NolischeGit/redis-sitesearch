<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Memory Architecture in Redis Enterprise Software on Redis Labs Documentation Center</title>
    <link>/rs/concepts/memory-architecture/</link>
    <description>Recent content in Memory Architecture in Redis Enterprise Software on Redis Labs Documentation Center</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/rs/concepts/memory-architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Memory Management with Redis Enterprise Software</title>
      <link>/rs/concepts/memory-architecture/memory-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/concepts/memory-architecture/memory-management/</guid>
      <description>Redis Enterprise Software (RS) manages node memory so that data is entirely in RAM for improved database performance. RS is designed to handle memory management to optimize database performance - better than OS memory management. If not enough RAM is available, RS prevents adding more data into the databases.
RS protects the existing data and prevents the database from being able to store data into the shards. You can configure the cluster to move the data to another node, or even discard it according to the eviction policy set on each database by the administrator.</description>
    </item>
    
    <item>
      <title>Redis on Flash</title>
      <link>/rs/concepts/memory-architecture/redis-flash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/rs/concepts/memory-architecture/redis-flash/</guid>
      <description>Redis on Flash (RoF) offers users of Redis Enterprise Software and Redis Enterprise Cloud the unique ability to have very large Redis databases but at significant cost savings. Where standard Redis databases must all be in RAM, Redis on Flash enables your Redis databases to span both RAM and dedicated flash memory (SSD). Whilst keys are always stored in RAM, RoF intelligently manages the location of their values (RAM vs Flash) in the database via a LRU-based (least-recently-used) mechanism.</description>
    </item>
    
  </channel>
</rss>